# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Address {
  formattedAddress: String!
  location: Location
}

type BusinessTime {
  isClosed: Boolean!
  isOpenAllDay: Boolean!
  period: [Period!]
}

input CreateAddressDto {
  formattedAddress: String!
  location: LocationDto!
}

input CreateBusinessTimeDto {
  isClosed: Boolean!
  isOpenAllDay: Boolean!
  period: [PeriodDto!]!
}

input CreateOpenHoursDto {
  Friday: CreateBusinessTimeDto!
  Monday: CreateBusinessTimeDto!
  Saturday: CreateBusinessTimeDto!
  Sunday: CreateBusinessTimeDto!
  Thursday: CreateBusinessTimeDto!
  Tuesday: CreateBusinessTimeDto!
  Wednesday: CreateBusinessTimeDto!
}

input CreatePhotoDto {
  imageAlt: String!
  imageType: PhotoType!
  imageUrl: String!
  uploadUserId: String!
}

input CreateRestaurantDto {
  address: CreateAddressDto!
  description: String!
  email: String!
  name: String!
  openHours: CreateOpenHoursDto!
  phone: String!
  website: String
}

input CreateReviewDto {
  description: String!
  placeId: String!
  placeType: String!
  rating: Float!
  title: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Location {
  lat: Float!
  lng: Float!
}

input LocationDto {
  lat: Float!
  lng: Float!
}

type Mutation {
  """Create restaurant"""
  createRestaurant(files: [Upload!], input: CreateRestaurantDto!): Restaurant!

  """Create review"""
  createReview(files: [Upload!], input: CreateReviewDto!): Review!

  """Delete restaurant"""
  deleteRestaurant(id: ID!): Restaurant!

  """Delete review"""
  deleteReview(id: ID!): Review!

  """Update restaurant"""
  updateRestaurant(files: [Upload!], id: ID!, input: UpdateRestaurantGQLDto!): Restaurant!

  """Update review"""
  updateReview(files: [Upload!], id: ID!, input: UpdateReviewGQLDto!): Review!
}

type OpenHours {
  Friday: BusinessTime!
  Monday: BusinessTime!
  Saturday: BusinessTime!
  Sunday: BusinessTime!
  Thursday: BusinessTime!
  Tuesday: BusinessTime!
  Wednesday: BusinessTime!
}

type Period {
  closeTime: String!
  openTime: String!
}

input PeriodDto {
  closeTime: String!
  openTime: String!
}

type Photo {
  _id: ID!
  imageAlt: String!
  imageType: PhotoType!
  imageUrl: String!
  uploadUserId: ID!
}

"""Type of photo"""
enum PhotoType {
  ATTRACTION
  RESTAURANT
  REVIEW
  USER
}

type Query {
  """Get all restaurants"""
  getAllRestaurants: [Restaurant!]!

  """Get all reviews"""
  getAllReviews: [Review!]!

  """Get ME"""
  getMe: User!

  """Get restaurant by id"""
  getOneRestaurant(id: ID!): Restaurant!

  """Get review by id"""
  getOneReview(id: ID!): Review!

  """Get user by id"""
  getOneUser(id: ID!): User!
}

type Restaurant {
  _id: ID!
  address: Address!
  createdAt: DateTime!
  createdUserId: ID!
  description: String!
  email: String!
  name: String!
  openHours: OpenHours!
  overAllRating: Float
  phone: String!
  photos: [Photo!]!
  updatedAt: DateTime!
  website: String
}

type Review {
  _id: ID!
  createdAt: DateTime!
  description: String!
  photos: [Photo!]!
  placeId: ID!
  placeType: String!
  rating: Float!
  title: String!
  updatedAt: DateTime!
  userId: ID!
}

input UpdateRestaurantGQLDto {
  address: CreateAddressDto
  description: String
  email: String
  name: String
  openHours: CreateOpenHoursDto
  phone: String
  photos: [CreatePhotoDto!]
  website: String
}

input UpdateReviewGQLDto {
  description: String
  photos: [CreatePhotoDto!]
  placeId: String
  placeType: String
  rating: Float
  title: String
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type User {
  _id: ID!
  description: String
  email: String!
  firstName: String
  lastName: String
  nickname: String!
  role: String!
  savedAttractions: [ID!]
  savedRestaurants: [ID!]
  userAvatar: Photo!
}